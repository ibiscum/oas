// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"

	"github.com/ogen-go/ogen/validate"
)

func (s *Dog) Validate() error {
	if s == nil {
		return validate.ErrNilPointer
	}

	var failures []validate.FieldError
	if err := func() error {
		if value, ok := s.Breed.Get(); ok {
			if err := func() error {
				if err := value.Validate(); err != nil {
					return err
				}
				return nil
			}(); err != nil {
				return err
			}
		}
		return nil
	}(); err != nil {
		failures = append(failures, validate.FieldError{
			Name:  "breed",
			Error: err,
		})
	}
	if len(failures) > 0 {
		return &validate.Error{Fields: failures}
	}
	return nil
}

func (s DogBreed) Validate() error {
	switch s {
	case "Dingo":
		return nil
	case "Husky":
		return nil
	case "Retriever":
		return nil
	case "Shepherd":
		return nil
	default:
		return errors.Errorf("invalid value: %v", s)
	}
}

func (s GetPetsReq) Validate() error {
	switch s.Type {
	case CatGetPetsReq:
		return nil // no validation needed
	case DogGetPetsReq:
		if err := s.Dog.Validate(); err != nil {
			return err
		}
		return nil
	default:
		return errors.Errorf("invalid type %q", s.Type)
	}
}
