/*
Polymorphism support

https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object

API version: 1.0.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package polymorphism

import (
	"encoding/json"
)

// checks if the AnythingNestedOneOfObjectWithNestedOneOfRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnythingNestedOneOfObjectWithNestedOneOfRequest{}

// AnythingNestedOneOfObjectWithNestedOneOfRequest struct for AnythingNestedOneOfObjectWithNestedOneOfRequest
type AnythingNestedOneOfObjectWithNestedOneOfRequest struct {
	Config *AnythingNestedOneOfObjectWithNestedOneOfRequestConfig `json:"config,omitempty"`
}

// NewAnythingNestedOneOfObjectWithNestedOneOfRequest instantiates a new AnythingNestedOneOfObjectWithNestedOneOfRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnythingNestedOneOfObjectWithNestedOneOfRequest() *AnythingNestedOneOfObjectWithNestedOneOfRequest {
	this := AnythingNestedOneOfObjectWithNestedOneOfRequest{}
	return &this
}

// NewAnythingNestedOneOfObjectWithNestedOneOfRequestWithDefaults instantiates a new AnythingNestedOneOfObjectWithNestedOneOfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnythingNestedOneOfObjectWithNestedOneOfRequestWithDefaults() *AnythingNestedOneOfObjectWithNestedOneOfRequest {
	this := AnythingNestedOneOfObjectWithNestedOneOfRequest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AnythingNestedOneOfObjectWithNestedOneOfRequest) GetConfig() AnythingNestedOneOfObjectWithNestedOneOfRequestConfig {
	if o == nil || IsNil(o.Config) {
		var ret AnythingNestedOneOfObjectWithNestedOneOfRequestConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnythingNestedOneOfObjectWithNestedOneOfRequest) GetConfigOk() (*AnythingNestedOneOfObjectWithNestedOneOfRequestConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *AnythingNestedOneOfObjectWithNestedOneOfRequest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AnythingNestedOneOfObjectWithNestedOneOfRequestConfig and assigns it to the Config field.
func (o *AnythingNestedOneOfObjectWithNestedOneOfRequest) SetConfig(v AnythingNestedOneOfObjectWithNestedOneOfRequestConfig) {
	o.Config = &v
}

func (o AnythingNestedOneOfObjectWithNestedOneOfRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnythingNestedOneOfObjectWithNestedOneOfRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableAnythingNestedOneOfObjectWithNestedOneOfRequest struct {
	value *AnythingNestedOneOfObjectWithNestedOneOfRequest
	isSet bool
}

func (v NullableAnythingNestedOneOfObjectWithNestedOneOfRequest) Get() *AnythingNestedOneOfObjectWithNestedOneOfRequest {
	return v.value
}

func (v *NullableAnythingNestedOneOfObjectWithNestedOneOfRequest) Set(val *AnythingNestedOneOfObjectWithNestedOneOfRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAnythingNestedOneOfObjectWithNestedOneOfRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAnythingNestedOneOfObjectWithNestedOneOfRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnythingNestedOneOfObjectWithNestedOneOfRequest(val *AnythingNestedOneOfObjectWithNestedOneOfRequest) *NullableAnythingNestedOneOfObjectWithNestedOneOfRequest {
	return &NullableAnythingNestedOneOfObjectWithNestedOneOfRequest{value: val, isSet: true}
}

func (v NullableAnythingNestedOneOfObjectWithNestedOneOfRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnythingNestedOneOfObjectWithNestedOneOfRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


