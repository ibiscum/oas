/*
Responses with various schema formats

https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object

API version: 1.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package complex_nesting

import (
	"encoding/json"
)

// checks if the ArrayOfFlatObjects type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArrayOfFlatObjects{}

// ArrayOfFlatObjects Array of flat objects
type ArrayOfFlatObjects struct {
}

// NewArrayOfFlatObjects instantiates a new ArrayOfFlatObjects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArrayOfFlatObjects() *ArrayOfFlatObjects {
	this := ArrayOfFlatObjects{}
	return &this
}

// NewArrayOfFlatObjectsWithDefaults instantiates a new ArrayOfFlatObjects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArrayOfFlatObjectsWithDefaults() *ArrayOfFlatObjects {
	this := ArrayOfFlatObjects{}
	return &this
}

func (o ArrayOfFlatObjects) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArrayOfFlatObjects) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *ArrayOfFlatObjects) UnmarshalJSON(data []byte) (err error) {
	return json.Unmarshal(data, &o.Items)
}

type NullableArrayOfFlatObjects struct {
	value ArrayOfFlatObjects
	isSet bool
}

func (v NullableArrayOfFlatObjects) Get() ArrayOfFlatObjects {
	return v.value
}

func (v *NullableArrayOfFlatObjects) Set(val ArrayOfFlatObjects) {
	v.value = val
	v.isSet = true
}

func (v NullableArrayOfFlatObjects) IsSet() bool {
	return v.isSet
}

func (v *NullableArrayOfFlatObjects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArrayOfFlatObjects(val ArrayOfFlatObjects) *NullableArrayOfFlatObjects {
	return &NullableArrayOfFlatObjects{value: val, isSet: true}
}

func (v NullableArrayOfFlatObjects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArrayOfFlatObjects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


