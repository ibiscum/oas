/*
Responses with various schema formats

https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object

API version: 1.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package complex_nesting

import (
	"encoding/json"
)

// checks if the ArrayInnerInputsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArrayInnerInputsInner{}

// ArrayInnerInputsInner struct for ArrayInnerInputsInner
type ArrayInnerInputsInner struct {
	Input1 *string `json:"input 1,omitempty"`
	Input2 *string `json:"input 2,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArrayInnerInputsInner ArrayInnerInputsInner

// NewArrayInnerInputsInner instantiates a new ArrayInnerInputsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArrayInnerInputsInner() *ArrayInnerInputsInner {
	this := ArrayInnerInputsInner{}
	return &this
}

// NewArrayInnerInputsInnerWithDefaults instantiates a new ArrayInnerInputsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArrayInnerInputsInnerWithDefaults() *ArrayInnerInputsInner {
	this := ArrayInnerInputsInner{}
	return &this
}

// GetInput1 returns the Input1 field value if set, zero value otherwise.
func (o *ArrayInnerInputsInner) GetInput1() string {
	if o == nil || IsNil(o.Input1) {
		var ret string
		return ret
	}
	return *o.Input1
}

// GetInput1Ok returns a tuple with the Input1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArrayInnerInputsInner) GetInput1Ok() (*string, bool) {
	if o == nil || IsNil(o.Input1) {
		return nil, false
	}
	return o.Input1, true
}

// HasInput1 returns a boolean if a field has been set.
func (o *ArrayInnerInputsInner) HasInput1() bool {
	if o != nil && !IsNil(o.Input1) {
		return true
	}

	return false
}

// SetInput1 gets a reference to the given string and assigns it to the Input1 field.
func (o *ArrayInnerInputsInner) SetInput1(v string) {
	o.Input1 = &v
}

// GetInput2 returns the Input2 field value if set, zero value otherwise.
func (o *ArrayInnerInputsInner) GetInput2() string {
	if o == nil || IsNil(o.Input2) {
		var ret string
		return ret
	}
	return *o.Input2
}

// GetInput2Ok returns a tuple with the Input2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArrayInnerInputsInner) GetInput2Ok() (*string, bool) {
	if o == nil || IsNil(o.Input2) {
		return nil, false
	}
	return o.Input2, true
}

// HasInput2 returns a boolean if a field has been set.
func (o *ArrayInnerInputsInner) HasInput2() bool {
	if o != nil && !IsNil(o.Input2) {
		return true
	}

	return false
}

// SetInput2 gets a reference to the given string and assigns it to the Input2 field.
func (o *ArrayInnerInputsInner) SetInput2(v string) {
	o.Input2 = &v
}

func (o ArrayInnerInputsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArrayInnerInputsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Input1) {
		toSerialize["input 1"] = o.Input1
	}
	if !IsNil(o.Input2) {
		toSerialize["input 2"] = o.Input2
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArrayInnerInputsInner) UnmarshalJSON(data []byte) (err error) {
	varArrayInnerInputsInner := _ArrayInnerInputsInner{}

	err = json.Unmarshal(data, &varArrayInnerInputsInner)

	if err != nil {
		return err
	}

	*o = ArrayInnerInputsInner(varArrayInnerInputsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "input 1")
		delete(additionalProperties, "input 2")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArrayInnerInputsInner struct {
	value *ArrayInnerInputsInner
	isSet bool
}

func (v NullableArrayInnerInputsInner) Get() *ArrayInnerInputsInner {
	return v.value
}

func (v *NullableArrayInnerInputsInner) Set(val *ArrayInnerInputsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableArrayInnerInputsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableArrayInnerInputsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArrayInnerInputsInner(val *ArrayInnerInputsInner) *NullableArrayInnerInputsInner {
	return &NullableArrayInnerInputsInner{value: val, isSet: true}
}

func (v NullableArrayInnerInputsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArrayInnerInputsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


