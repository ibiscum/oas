/*
Responses with various schema formats

https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object

API version: 1.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package complex_nesting

import (
	"encoding/json"
)

// checks if the ObjectOfAdditionalPropertiesObjectPolymorphism type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectOfAdditionalPropertiesObjectPolymorphism{}

// ObjectOfAdditionalPropertiesObjectPolymorphism Object containing an `additionalProperties` declaration that's comprised of a polymorphic `oneOf`.
type ObjectOfAdditionalPropertiesObjectPolymorphism struct {
	AdditionalProperties map[string]interface{}
}

type _ObjectOfAdditionalPropertiesObjectPolymorphism ObjectOfAdditionalPropertiesObjectPolymorphism

// NewObjectOfAdditionalPropertiesObjectPolymorphism instantiates a new ObjectOfAdditionalPropertiesObjectPolymorphism object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectOfAdditionalPropertiesObjectPolymorphism() *ObjectOfAdditionalPropertiesObjectPolymorphism {
	this := ObjectOfAdditionalPropertiesObjectPolymorphism{}
	return &this
}

// NewObjectOfAdditionalPropertiesObjectPolymorphismWithDefaults instantiates a new ObjectOfAdditionalPropertiesObjectPolymorphism object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectOfAdditionalPropertiesObjectPolymorphismWithDefaults() *ObjectOfAdditionalPropertiesObjectPolymorphism {
	this := ObjectOfAdditionalPropertiesObjectPolymorphism{}
	return &this
}

func (o ObjectOfAdditionalPropertiesObjectPolymorphism) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectOfAdditionalPropertiesObjectPolymorphism) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ObjectOfAdditionalPropertiesObjectPolymorphism) UnmarshalJSON(data []byte) (err error) {
	varObjectOfAdditionalPropertiesObjectPolymorphism := _ObjectOfAdditionalPropertiesObjectPolymorphism{}

	err = json.Unmarshal(data, &varObjectOfAdditionalPropertiesObjectPolymorphism)

	if err != nil {
		return err
	}

	*o = ObjectOfAdditionalPropertiesObjectPolymorphism(varObjectOfAdditionalPropertiesObjectPolymorphism)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableObjectOfAdditionalPropertiesObjectPolymorphism struct {
	value *ObjectOfAdditionalPropertiesObjectPolymorphism
	isSet bool
}

func (v NullableObjectOfAdditionalPropertiesObjectPolymorphism) Get() *ObjectOfAdditionalPropertiesObjectPolymorphism {
	return v.value
}

func (v *NullableObjectOfAdditionalPropertiesObjectPolymorphism) Set(val *ObjectOfAdditionalPropertiesObjectPolymorphism) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectOfAdditionalPropertiesObjectPolymorphism) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectOfAdditionalPropertiesObjectPolymorphism) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectOfAdditionalPropertiesObjectPolymorphism(val *ObjectOfAdditionalPropertiesObjectPolymorphism) *NullableObjectOfAdditionalPropertiesObjectPolymorphism {
	return &NullableObjectOfAdditionalPropertiesObjectPolymorphism{value: val, isSet: true}
}

func (v NullableObjectOfAdditionalPropertiesObjectPolymorphism) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectOfAdditionalPropertiesObjectPolymorphism) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


