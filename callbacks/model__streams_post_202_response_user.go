/*
Callback Example

API definition with callback

API version: 1.0.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package callbacks

import (
	"encoding/json"
)

// checks if the StreamsPost202ResponseUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamsPost202ResponseUser{}

// StreamsPost202ResponseUser struct for StreamsPost202ResponseUser
type StreamsPost202ResponseUser struct {
	Email *string `json:"email,omitempty"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StreamsPost202ResponseUser StreamsPost202ResponseUser

// NewStreamsPost202ResponseUser instantiates a new StreamsPost202ResponseUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamsPost202ResponseUser() *StreamsPost202ResponseUser {
	this := StreamsPost202ResponseUser{}
	return &this
}

// NewStreamsPost202ResponseUserWithDefaults instantiates a new StreamsPost202ResponseUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamsPost202ResponseUserWithDefaults() *StreamsPost202ResponseUser {
	this := StreamsPost202ResponseUser{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *StreamsPost202ResponseUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPost202ResponseUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *StreamsPost202ResponseUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *StreamsPost202ResponseUser) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StreamsPost202ResponseUser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPost202ResponseUser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StreamsPost202ResponseUser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StreamsPost202ResponseUser) SetName(v string) {
	o.Name = &v
}

func (o StreamsPost202ResponseUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamsPost202ResponseUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StreamsPost202ResponseUser) UnmarshalJSON(data []byte) (err error) {
	varStreamsPost202ResponseUser := _StreamsPost202ResponseUser{}

	err = json.Unmarshal(data, &varStreamsPost202ResponseUser)

	if err != nil {
		return err
	}

	*o = StreamsPost202ResponseUser(varStreamsPost202ResponseUser)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStreamsPost202ResponseUser struct {
	value *StreamsPost202ResponseUser
	isSet bool
}

func (v NullableStreamsPost202ResponseUser) Get() *StreamsPost202ResponseUser {
	return v.value
}

func (v *NullableStreamsPost202ResponseUser) Set(val *StreamsPost202ResponseUser) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamsPost202ResponseUser) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamsPost202ResponseUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamsPost202ResponseUser(val *StreamsPost202ResponseUser) *NullableStreamsPost202ResponseUser {
	return &NullableStreamsPost202ResponseUser{value: val, isSet: true}
}

func (v NullableStreamsPost202ResponseUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamsPost202ResponseUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


