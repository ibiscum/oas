/*
Callback Example

API definition with callback

API version: 1.0.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package callbacks

import (
	"encoding/json"
	"fmt"
)

// checks if the PostStreams201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostStreams201Response{}

// PostStreams201Response subscription information
type PostStreams201Response struct {
	// this unique identifier allows management of the subscription
	SubscriptionId string `json:"subscriptionId"`
	AdditionalProperties map[string]interface{}
}

type _PostStreams201Response PostStreams201Response

// NewPostStreams201Response instantiates a new PostStreams201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostStreams201Response(subscriptionId string) *PostStreams201Response {
	this := PostStreams201Response{}
	this.SubscriptionId = subscriptionId
	return &this
}

// NewPostStreams201ResponseWithDefaults instantiates a new PostStreams201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostStreams201ResponseWithDefaults() *PostStreams201Response {
	this := PostStreams201Response{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PostStreams201Response) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PostStreams201Response) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PostStreams201Response) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

func (o PostStreams201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostStreams201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionId"] = o.SubscriptionId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostStreams201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscriptionId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostStreams201Response := _PostStreams201Response{}

	err = json.Unmarshal(data, &varPostStreams201Response)

	if err != nil {
		return err
	}

	*o = PostStreams201Response(varPostStreams201Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "subscriptionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostStreams201Response struct {
	value *PostStreams201Response
	isSet bool
}

func (v NullablePostStreams201Response) Get() *PostStreams201Response {
	return v.value
}

func (v *NullablePostStreams201Response) Set(val *PostStreams201Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostStreams201Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostStreams201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostStreams201Response(val *PostStreams201Response) *NullablePostStreams201Response {
	return &NullablePostStreams201Response{value: val, isSet: true}
}

func (v NullablePostStreams201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostStreams201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


