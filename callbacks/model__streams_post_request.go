/*
Callback Example

API definition with callback

API version: 1.0.0
Contact: a-team@goarmy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package callbacks

import (
	"encoding/json"
	"time"
)

// checks if the StreamsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamsPostRequest{}

// StreamsPostRequest struct for StreamsPostRequest
type StreamsPostRequest struct {
	Timestamp *time.Time `json:"timestamp,omitempty"`
	UserData *string `json:"userData,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StreamsPostRequest StreamsPostRequest

// NewStreamsPostRequest instantiates a new StreamsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamsPostRequest() *StreamsPostRequest {
	this := StreamsPostRequest{}
	return &this
}

// NewStreamsPostRequestWithDefaults instantiates a new StreamsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamsPostRequestWithDefaults() *StreamsPostRequest {
	this := StreamsPostRequest{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *StreamsPostRequest) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *StreamsPostRequest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *StreamsPostRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *StreamsPostRequest) GetUserData() string {
	if o == nil || IsNil(o.UserData) {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequest) GetUserDataOk() (*string, bool) {
	if o == nil || IsNil(o.UserData) {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *StreamsPostRequest) HasUserData() bool {
	if o != nil && !IsNil(o.UserData) {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *StreamsPostRequest) SetUserData(v string) {
	o.UserData = &v
}

func (o StreamsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.UserData) {
		toSerialize["userData"] = o.UserData
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StreamsPostRequest) UnmarshalJSON(data []byte) (err error) {
	varStreamsPostRequest := _StreamsPostRequest{}

	err = json.Unmarshal(data, &varStreamsPostRequest)

	if err != nil {
		return err
	}

	*o = StreamsPostRequest(varStreamsPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "userData")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStreamsPostRequest struct {
	value *StreamsPostRequest
	isSet bool
}

func (v NullableStreamsPostRequest) Get() *StreamsPostRequest {
	return v.value
}

func (v *NullableStreamsPostRequest) Set(val *StreamsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamsPostRequest(val *StreamsPostRequest) *NullableStreamsPostRequest {
	return &NullableStreamsPostRequest{value: val, isSet: true}
}

func (v NullableStreamsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


